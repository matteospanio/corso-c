## Puntatori

Un **puntatore** è una variabile che contiene l'informazione per accedere ad un'altra variabile. In pratica, è un indirizzo di memoria.

Il sistema operativo assegna un indirizzo di memoria ad ogni variabile. Questo indirizzo è un numero che identifica la posizione della variabile in memoria. Un puntatore contiene questo numero.

## Puntatori: memoria

La memoria è divisa in celle della dimensione di un byte (8 bit). Ogni byte ha un proprio indirizzo.

Ogni variabile è composta da un numero specifico di byte contigui (`sizeof` serve proprio a conoscere lo spazio in memoria di una variabile). Il puntatore contiene l'indirizzo del primo byte della variabile.

## Puntatori

È possibile compiere operazioni (spesso complesse) con questi puntatori, di fatto sono un nuovo tipo di variabile detta *variabile puntatore*.

Per dichiarare un puntatore si usa il simbolo `*`:

`int *p;`

in questo caso `p` è un puntatore che punta ad una variabile di tipo `int`.

## Puntatori

Si possono dichiarare insieme ad altre variabili:

`int *p, x, *y, a[10];`

Qualsiasi tipo può essere usato.

## Puntatori: operatori

Esistono due operatori che si possono usare con i puntatori:

- `&` restituisce l'indirizzo di memoria di una variabile
- `*` restituisce il valore puntato da un puntatore

```{.c}
int i, j, *p;
// ...
p = &i; // il valore di p è l'indirizzo di i
j = *p; // il valore di j è il valore puntato da p
```
